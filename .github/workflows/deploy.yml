name: FastAPI Deployment and Lambda Update

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el código del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"  # Cambiado a una versión compatible con Lambda

      # Paso 3: Configurar AWS CLI
      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region us-east-1  # Cambia según la región de tu S3 y Lambda

      # Validar configuración de AWS
      - name: Validate AWS Configuration
        run: |
          aws sts get-caller-identity

      # Paso 4: Instalar dependencias específicas para x86_64
      - name: Install dependencies for x86_64 Lambda
        run: |
          python -m pip install --upgrade pip
          mkdir -p lambda_dependencies
          pip install --platform manylinux2014_x86_64 \
                      --only-binary=:all: \
                      --upgrade \
                      --target lambda_dependencies \
                      -r requirements.txt

      # Paso 5: Crear archivo .env en el directorio app/
      - name: Create .env file in app/
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > app/.env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> app/.env
          echo "AWS_REGION=us-east-1" >> app/.env

      # Paso 6: Incluir el directorio `app/` en el ZIP
      - name: Add app directory to ZIP
        run: |
          cp -r app lambda_dependencies/

      # Paso 7: Crear archivo ZIP
      - name: Package dependencies, app, and .env into ZIP
        run: |
          cd lambda_dependencies
          zip -r ../lambda_dependencies.zip .
          cd ..

      # Paso 8: Subir el archivo ZIP a S3
      - name: Upload ZIP to S3
        run: |
          aws s3 cp lambda_dependencies.zip s3://zipapiparcial/lambda_dependencies.zip

      # Validar que el archivo se subió a S3
      - name: Validate S3 Upload
        run: |
          aws s3 ls s3://zipapiparcial/lambda_dependencies.zip

      # Paso 9: Actualizar la función Lambda
      - name: Update Lambda Function
        run: |
          aws lambda update-function-code \
            --function-name prueba \
            --s3-bucket zipapiparcial \
            --s3-key lambda_dependencies.zip
